{"version":3,"sources":["components/job/Job.jsx","components/jobs/Jobs.jsx","App.js","index.js"],"names":["getMDY","ts","toDateString","split","slice","join","Job","job","React","useState","anchorEl","setAnchorEl","open","Boolean","id","undefined","className","Card","elevation","CardContent","Typography","variant","title","Divider","company","color","location","Button","size","onClick","event","currentTarget","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","style","height","width","dangerouslySetInnerHTML","__html","description","marginLeft","timestamp","dateStr","Date","todayStr","yesterdayStr","now","makeDate","created_at","src","company_logo","alt","float","maxHeight","maxWidth","CardActions","href","url","Jobs","jobs","numOfJobs","length","numPages","Math","ceil","activeStep","setActiveStep","jobsOnPage","component","map","i","key","MobileStepper","steps","position","nextButton","prevActiveStep","disabled","backButton","JOB_URL","updateCallback","a","axios","get","response","console","log","data","App","jobList","updateJobs","useEffect","getJobs","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c894a4c3.chunk.js","sourcesContent":["import React from 'react';\nimport './job.scss';\n\nimport { Typography } from '@material-ui/core';\nimport { Card } from '@material-ui/core';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\n\nimport Popover from '@material-ui/core/Popover';\n\nconst ONE_DAY_MS = 24*3600*1000;\n\nfunction getMDY(ts) {\n    return ts.toDateString().split(' ').slice(0,3).join(' ')\n}\n\nfunction makeDate(timestamp) {\n    const date = new Date(timestamp);\n    const dateStr =  getMDY(date);\n    const todayStr = getMDY(new Date());\n    const yesterdayStr = getMDY(new Date(Date.now() - ONE_DAY_MS));\n    if (dateStr === todayStr) {\n        return 'Today';\n    } else if (dateStr === yesterdayStr) {\n        return 'Yesterday';\n    } else {\n        return dateStr;\n    }\n}\n\nconst Job = ({job}) => {\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n   \n    return(\n        <div className='job'>\n            <Card className='card' elevation={3}>\n            <CardContent className='card-content'>\n                <div>\n                <Typography variant='h6'>{job.title}</Typography>\n                <Divider/>\n                \n\n        <Typography variant='subtitle2' className='job-title'>{job.company}</Typography>\n                \n                <Typography className='location' color=\"textSecondary\">{job.location}</Typography>\n                <Button className='description-btn' size='small' onClick={handleClick}>Read job details</Button>\n                <Popover\n                elevation={20}\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'right',\n        }}\n        transformOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n      >\n          <div style={{height: 500, width: 800}}>\n          <Typography variant='body2' dangerouslySetInnerHTML={{\n    __html: job.description\n  }}></Typography>\n          </div>\n        \n      </Popover>\n                </div>\n                <div className='date-logo'>\n                    <Typography style={{marginLeft: 'auto'}} variant='caption'>{makeDate(job.created_at)}</Typography>\n                    <div style={{width: 200, height: 100}}>\n                    <img src={job.company_logo} alt=\"company-logo\" style={{ float:'right', maxHeight: '100%', maxWidth: '100%'}}></img>\n                    </div>\n                </div>\n\n            </CardContent>\n            <CardActions>\n                <Button className='apply-btn' variant='contained' size='small' color='primary' href={job.url}>Apply Now</Button>            \n            </CardActions>\n            </Card>\n        </div>\n    )\n}\n\nexport default Job;","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport Job from '../job/Job';\nimport './jobs.scss';\n\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport Button from '@material-ui/core/Button';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\n\nconst Jobs = ({jobs}) => {\n\n    const numOfJobs = jobs.length;\n    const numPages = Math.ceil(numOfJobs / 20);\n\n    const [activeStep, setActiveStep] = React.useState(0);\n    const jobsOnPage = jobs.slice(activeStep * 20, (activeStep * 20) + 20);\n\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n    return (\n<div>\n    <Typography variant=\"h4\" component=\"h1\">\n        Remote Programming Jobs\n    </Typography>\n    <Typography variant=\"subtitle1\" component=\"h6\">\n        Found {numOfJobs} jobs!\n    </Typography>\n    <div className='jobs'>\n    {\n            jobsOnPage.map((job, i) => <Job key={i} job={job}/>)\n    }\n    <div>\n        Page {activeStep+1} of {numPages}\n    </div>\n     <MobileStepper\n      variant=\"progress\"\n      steps={numPages}\n      position=\"static\"\n      activeStep={activeStep}\n      nextButton={\n        <Button size=\"small\" onClick={handleNext} disabled={activeStep === numPages-1}>\n          Next\n          <KeyboardArrowRight />\n        </Button>\n      }\n      backButton={\n        <Button size=\"small\" onClick={handleBack} disabled={activeStep === 0}>\n          <KeyboardArrowLeft />\n          Back\n        </Button>\n      }\n    />\n    </div>\n    \n</div>\n    );\n}\n\nexport default Jobs;","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport axios from 'axios';\n\nimport Jobs from './components/jobs/Jobs';\n\nconst JOB_URL = 'http://localhost:3081/jobs';\n\nasync function getJobs(updateCallback) {\n  const response = await axios.get(JOB_URL);\n  console.log(response.data);\n  updateCallback(response.data);\n}\n\nfunction App() {\n\n  const [jobList, updateJobs] = useState([]);\n\n  useEffect(() => {\n    getJobs(updateJobs);\n  }, []);\n\n  return (\n   <div>\n     <Jobs jobs={jobList}/>\n   </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}